From b3ded469a3a826f58da076f285880489913899ea Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Fri, 11 Oct 2024 15:48:29 +0200
Subject: [PATCH] Replace deprecated calls to distutils.spawn.find_executable

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/CephFSSR.py    | 3 +--
 drivers/GlusterFSSR.py | 3 +--
 drivers/MooseFSSR.py   | 3 +--
 drivers/XFSSR.py       | 3 +--
 drivers/ZFSSR.py       | 3 +--
 drivers/util.py        | 4 ++++
 6 files changed, 9 insertions(+), 10 deletions(-)

Index: sm-3.2.12/drivers/CephFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/CephFSSR.py
+++ sm-3.2.12/drivers/CephFSSR.py
@@ -264,8 +264,7 @@ class CephFSSR(FileSR.FileSR):
 
     @staticmethod
     def _is_ceph_available():
-        import distutils.spawn
-        return distutils.spawn.find_executable('ceph')
+        return util.find_executable('ceph')
 
 class CephFSFileVDI(FileSR.FileVDI):
     def attach(self, sr_uuid, vdi_uuid):
Index: sm-3.2.12/drivers/GlusterFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/GlusterFSSR.py
+++ sm-3.2.12/drivers/GlusterFSSR.py
@@ -244,8 +244,7 @@ class GlusterFSSR(FileSR.FileSR):
 
     @staticmethod
     def _is_glusterfs_available():
-        import distutils.spawn
-        return distutils.spawn.find_executable('glusterfs')
+        return util.find_executable('glusterfs')
 
 
 class GlusterFSFileVDI(FileSR.FileVDI):
Index: sm-3.2.12/drivers/MooseFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/MooseFSSR.py
+++ sm-3.2.12/drivers/MooseFSSR.py
@@ -276,8 +276,7 @@ class MooseFSSR(FileSR.FileSR):
 
     @staticmethod
     def _is_moosefs_available():
-        import distutils.spawn
-        return distutils.spawn.find_executable('mfsmount')
+        return util.find_executable('mfsmount')
 
 class MooseFSFileVDI(FileSR.FileVDI):
     def attach(self, sr_uuid, vdi_uuid):
Index: sm-3.2.12/drivers/XFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/XFSSR.py
+++ sm-3.2.12/drivers/XFSSR.py
@@ -229,8 +229,7 @@ class XFSSR(FileSR.FileSR):
 
     @staticmethod
     def _is_xfs_available():
-        import distutils.spawn
-        return distutils.spawn.find_executable('mkfs.xfs')
+        return util.find_executable('mkfs.xfs')
 
 
 class XFSFileVDI(FileSR.FileVDI):
Index: sm-3.2.12/drivers/ZFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/ZFSSR.py
+++ sm-3.2.12/drivers/ZFSSR.py
@@ -58,8 +58,7 @@ DRIVER_INFO = {
 
 
 def is_zfs_available():
-    import distutils.spawn
-    return distutils.spawn.find_executable('zfs') and \
+    return util.find_executable('zfs') and \
         util.pathexists('/sys/module/zfs/initstate')
 
 
Index: sm-3.2.12/drivers/util.py
===================================================================
--- sm-3.2.12.orig/drivers/util.py
+++ sm-3.2.12/drivers/util.py
@@ -2107,3 +2107,7 @@ def make_profile(name, function):
         cProfile.runctx('function()', None, locals(), profile_path)
     finally:
         SMlog('* End profiling of {} ({}) *'.format(name, filename))
+
+
+def find_executable(name):
+    return shutil.which(name)

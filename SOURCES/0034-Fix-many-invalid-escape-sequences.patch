From 1e54484a7a0b1ed0f639fb282983d1bb4f080a50 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Fri, 11 Oct 2024 18:10:14 +0200
Subject: [PATCH 34/69] Fix many invalid escape sequences

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/cifutils.py    |  2 +-
 tests/test_SMBSR.py    |  2 +-
 tests/test_cifutils.py | 16 ++++++++--------
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/cifutils.py b/drivers/cifutils.py
index c183fe61..be82a37c 100755
--- a/drivers/cifutils.py
+++ b/drivers/cifutils.py
@@ -60,7 +60,7 @@ def splitDomainAndUsername(uname):
         username = dom_username[1]
     else:
         raise CIFSException("A maximum of 2 tokens are expected "
-                            "(<domain>\<username>). {} were given."
+                            "(<domain>\\<username>). {} were given."
                             .format(len(dom_username)))
     return username, domain
 
diff --git a/tests/test_SMBSR.py b/tests/test_SMBSR.py
index d20bcc0c..0bb6cfb8 100644
--- a/tests/test_SMBSR.py
+++ b/tests/test_SMBSR.py
@@ -135,7 +135,7 @@ class Test_SMBSR(unittest.TestCase):
     def test_attach_with_cifs_password_and_domain(
             self, symlink, mock_lock, makeMountPoint,
             mock_checkmount, mock_checklinks, mock_checkwritable):
-        smbsr = self.create_smbsr(username="citrix\jsmith", dconf_update={"password": "winter2019"})
+        smbsr = self.create_smbsr(username="citrix\\jsmith", dconf_update={"password": "winter2019"})
         mock_checkmount.return_value = False
         makeMountPoint.return_value = "/var/mount"
         smbsr.attach('asr_uuid')
diff --git a/tests/test_cifutils.py b/tests/test_cifutils.py
index 924aa3c6..0b8bf835 100644
--- a/tests/test_cifutils.py
+++ b/tests/test_cifutils.py
@@ -44,7 +44,7 @@ class TestCreate(unittest.TestCase):
         self.assertEqual(domain, None)
 
     def test_password_and_username_domain(self):
-        junk_dconf = {"cifspassword": "123", "username": "citrix\jsmith"}
+        junk_dconf = {"cifspassword": "123", "username": "citrix\\jsmith"}
         junk_session = 123
         credentials, domain = cifutils.getCIFCredentials(junk_dconf,
                                                          junk_session,
@@ -54,7 +54,7 @@ class TestCreate(unittest.TestCase):
         self.assertEqual(domain, "citrix")
 
     def test_password_and_username_domain_smbsr(self):
-        junk_dconf = {"password": "123", "username": "citrix\jsmith"}
+        junk_dconf = {"password": "123", "username": "citrix\\jsmith"}
         junk_session = 123
         credentials, domain = cifutils.getCIFCredentials(junk_dconf,
                                                          junk_session)
@@ -90,7 +90,7 @@ class TestCreate(unittest.TestCase):
     @mock.patch('util.get_secret', autospec=True)
     def test_password_secret_and_username_also_domain(self, get_secret):
         junk_dconf = {"cifspassword_secret": "123",
-                      "username": "citrix\jsmith"}
+                      "username": "citrix\\jsmith"}
         junk_session = 123
         get_secret.return_value = 'winter2019'
         credentials, domain = cifutils.getCIFCredentials(junk_dconf,
@@ -104,7 +104,7 @@ class TestCreate(unittest.TestCase):
     @mock.patch('util.get_secret', autospec=True)
     def test_password_secret_and_username_also_domain_smbsr(self, get_secret):
         junk_dconf = {"password_secret": "123",
-                      "username": "citrix\jsmith"}
+                      "username": "citrix\\jsmith"}
         junk_session = 123
         get_secret.return_value = 'winter2019'
         credentials, domain = cifutils.getCIFCredentials(junk_dconf,
@@ -116,23 +116,23 @@ class TestCreate(unittest.TestCase):
 
     def test_username_bad_domain(self):
         junk_dconf = {"cifspassword_secret": "123",
-                      "username": "citrix\gjk\jsmith"}
+                      "username": "citrix\\gjk\\jsmith"}
         junk_session = 123
         with self.assertRaises(cifutils.CIFSException) as cm:
             cifutils.getCIFCredentials(junk_dconf, junk_session, prefix="cifs")
         expected_message = ("A maximum of 2 tokens are expected "
-                            "(<domain>\<username>). 3 were given.")
+                            "(<domain>\\<username>). 3 were given.")
         the_exception = cm.exception
         self.assertEqual(the_exception.errstr, expected_message)
 
     def test_username_bad_domain_smbsr(self):
         junk_dconf = {"password_secret": "123",
-                      "username": "citrix\gjk\jsmith"}
+                      "username": "citrix\\gjk\\jsmith"}
         junk_session = 123
         with self.assertRaises(cifutils.CIFSException) as cm:
             cifutils.getCIFCredentials(junk_dconf, junk_session)
         expected_message = ("A maximum of 2 tokens are expected "
-                            "(<domain>\<username>). 3 were given.")
+                            "(<domain>\\<username>). 3 were given.")
         the_exception = cm.exception
         self.assertEqual(the_exception.errstr, expected_message)
 

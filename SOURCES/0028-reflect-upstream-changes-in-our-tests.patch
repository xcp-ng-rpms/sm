From ef7a02da3408e48ea88526af8e7fa5d511d214ab Mon Sep 17 00:00:00 2001
From: Benjamin Reis <benjamin.reis@vates.tech>
Date: Tue, 13 Aug 2024 11:11:39 +0200
Subject: [PATCH 28/28] reflect upstream changes in our tests

Signed-off-by: Benjamin Reis <benjamin.reis@vates.tech>
---
 tests/test_ISOSR.py | 7 ++-----
 tests/test_ZFSSR.py | 7 ++++---
 2 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/tests/test_ISOSR.py b/tests/test_ISOSR.py
index 9dec459..ad5d99d 100644
--- a/tests/test_ISOSR.py
+++ b/tests/test_ISOSR.py
@@ -68,17 +68,14 @@ class TestISOSR_overLocal(unittest.TestCase):
         isosr.detach(None)
         self.assertFalse(pread.called)
 
-    @testlib.with_context
     @mock.patch('os.path.exists')
     @mock.patch('util.pread')
-    def test_attach_local_with_bad_path(self, context, pread, exists):
-        context.setup_error_codes()
-
+    def test_attach_local_with_bad_path(self, pread, exists):
         # Local path doesn't exist, but error list yes.
         exists.side_effect = [False, True]
 
         isosr = self.create_isosr()
-        with self.assertRaises(SR.SROSError) as ose:
+        with self.assertRaises(xs_errors.SROSError) as ose:
             isosr.attach(None)
         self.assertEqual(ose.exception.errno, 226)
         self.assertFalse(pread.called)
diff --git a/tests/test_ZFSSR.py b/tests/test_ZFSSR.py
index 544ea39..47d72b8 100644
--- a/tests/test_ZFSSR.py
+++ b/tests/test_ZFSSR.py
@@ -6,6 +6,7 @@ import FileSR
 import os
 import SR
 import ZFSSR
+import xs_errors
 
 
 XML_DEFS = os.path.dirname(os.path.abspath(__file__)) + \
@@ -51,7 +52,7 @@ class TestZFSSR(unittest.TestCase):
         failed = False
         try:
             self.create_zfs_sr()
-        except SR.SROSError as e:
+        except xs_errors.SROSError as e:
             # Check SRUnavailable error.
             failed = e.errno == 47
         self.assertTrue(failed)
@@ -76,7 +77,7 @@ class TestZFSSR(unittest.TestCase):
         sr = self.create_zfs_sr()
         try:
             sr.create(sr.uuid, 42)
-        except SR.SROSError as e:
+        except xs_errors.SROSError as e:
             # Check ZFSSRCreate error.
             failed = e.errno == 5000
         self.assertTrue(failed)
@@ -109,7 +110,7 @@ class TestZFSSR(unittest.TestCase):
         sr = self.create_zfs_sr()
         try:
             sr.scan(sr.uuid)
-        except SR.SROSError as e:
+        except xs_errors.SROSError as e:
             # Check SRUnavailable error.
             failed = e.errno == 47
         self.assertTrue(failed)
-- 
2.46.0


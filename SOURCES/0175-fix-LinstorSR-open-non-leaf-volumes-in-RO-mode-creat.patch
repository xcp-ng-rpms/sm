From 383d6484765a0b316402f1899bc9a2ec2cf81521 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Thu, 20 Jun 2024 22:37:40 +0200
Subject: [PATCH 175/178] fix(LinstorSR): open non-leaf volumes in RO mode
 (create_chain_paths)

We must never open non-leaf volumes with the write option.
Only read only mode should be used to allow any host to access DRBD data.
Otherwise an attach call on dom-0 can be interrupted because a host already has a read lock.

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/LinstorSR.py      | 10 +++++-----
 drivers/linstorvhdutil.py |  5 +++--
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/LinstorSR.py b/drivers/LinstorSR.py
index 8d95890..2127057 100755
--- a/drivers/LinstorSR.py
+++ b/drivers/LinstorSR.py
@@ -1793,10 +1793,10 @@ class LinstorVDI(VDI.VDI):
                 'scan SR first to trigger auto-repair'
             )
 
-        if not attach_from_config or self.sr._is_master:
-            writable = 'args' not in self.sr.srcmd.params or \
-                self.sr.srcmd.params['args'][0] == 'true'
+        writable = 'args' not in self.sr.srcmd.params or \
+            self.sr.srcmd.params['args'][0] == 'true'
 
+        if not attach_from_config or self.sr._is_master:
             # We need to inflate the volume if we don't have enough place
             # to mount the VHD image. I.e. the volume capacity must be greater
             # than the VHD size + bitmap size.
@@ -1830,7 +1830,7 @@ class LinstorVDI(VDI.VDI):
             return self._attach_using_http_nbd()
 
         # Ensure we have a path...
-        self.sr._vhdutil.create_chain_paths(self.uuid)
+        self.sr._vhdutil.create_chain_paths(self.uuid, readonly=not writable)
 
         self.attached = True
         return VDI.VDI.attach(self, self.sr.uuid, self.uuid)
@@ -2357,7 +2357,7 @@ class LinstorVDI(VDI.VDI):
             raise xs_errors.XenError('SnapshotChainTooLong')
 
         # Ensure we have a valid path if we don't have a local diskful.
-        self.sr._vhdutil.create_chain_paths(self.uuid)
+        self.sr._vhdutil.create_chain_paths(self.uuid, readonly=True)
 
         volume_path = self.path
         if not util.pathexists(volume_path):
diff --git a/drivers/linstorvhdutil.py b/drivers/linstorvhdutil.py
index fd2bc8b..7f8efa1 100644
--- a/drivers/linstorvhdutil.py
+++ b/drivers/linstorvhdutil.py
@@ -152,7 +152,7 @@ class LinstorVhdUtil:
         self._session = session
         self._linstor = linstor
 
-    def create_chain_paths(self, vdi_uuid):
+    def create_chain_paths(self, vdi_uuid, readonly=False):
         # OPTIMIZE: Add a limit_to_first_allocated_block param to limit vhdutil calls.
         # Useful for the snapshot code algorithm.
 
@@ -168,7 +168,7 @@ class LinstorVhdUtil:
             def check_volume_usable():
                 while True:
                     try:
-                        with open(path, 'r+'):
+                        with open(path, 'r' if readonly else 'r+'):
                             pass
                     except IOError as e:
                         if e.errno == errno.ENODATA:
@@ -186,6 +186,7 @@ class LinstorVhdUtil:
             if not vdi_uuid:
                 break
             path = self._linstor.get_device_path(vdi_uuid)
+            readonly = True  # Non-leaf is always readonly.
 
         return leaf_vdi_path
 

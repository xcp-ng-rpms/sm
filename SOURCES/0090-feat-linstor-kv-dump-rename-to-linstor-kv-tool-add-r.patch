From e31e75852287028db29348575e4fcc116c96f768 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Mon, 14 Nov 2022 17:18:48 +0100
Subject: [PATCH 090/176] feat(linstor-kv-dump): rename to linstor-kv-tool +
 add remove volume helpers

---
 Makefile                                     |  2 +-
 scripts/{linstor-kv-dump => linstor-kv-tool} | 42 +++++++++++++++++++-
 2 files changed, 42 insertions(+), 2 deletions(-)
 rename scripts/{linstor-kv-dump => linstor-kv-tool} (51%)

diff --git a/Makefile b/Makefile
index aa71f80..42058c8 100755
--- a/Makefile
+++ b/Makefile
@@ -240,7 +240,7 @@ install: precheck
 	install -m 755 drivers/fcoelib.py $(SM_STAGING)$(SM_DEST)
 	mkdir -p $(SM_STAGING)$(LIBEXEC)
 	install -m 755 scripts/fork-log-daemon $(SM_STAGING)$(LIBEXEC)
-	install -m 755 scripts/linstor-kv-dump $(SM_STAGING)$(BIN_DEST)
+	install -m 755 scripts/linstor-kv-tool $(SM_STAGING)$(BIN_DEST)
 	install -m 755 scripts/local-device-change $(SM_STAGING)$(LIBEXEC)
 	install -m 755 scripts/check-device-sharing $(SM_STAGING)$(LIBEXEC)
 	install -m 755 scripts/usb_change $(SM_STAGING)$(LIBEXEC)
diff --git a/scripts/linstor-kv-dump b/scripts/linstor-kv-tool
similarity index 51%
rename from scripts/linstor-kv-dump
rename to scripts/linstor-kv-tool
index 93598d7..128d899 100755
--- a/scripts/linstor-kv-dump
+++ b/scripts/linstor-kv-tool
@@ -18,6 +18,7 @@ import argparse
 import json
 import linstor
 
+
 def dump_kv(controller_uri, group_name, namespace):
     kv = linstor.KV(
         group_name,
@@ -26,13 +27,52 @@ def dump_kv(controller_uri, group_name, namespace):
     )
     print(json.dumps(kv, sort_keys=True, indent=2))
 
+
+def remove_volume(controller_uri, group_name, vdi_name):
+    assert vdi_name
+    kv = linstor.KV(
+        group_name,
+        uri=controller_uri,
+        namespace='/xcp/volume/{}'.format(vdi_name)
+    )
+
+    for key, value in list(kv.items()):
+        del kv[key]
+
+
+def remove_all_volumes(controller_uri, group_name):
+    kv = linstor.KV(
+        group_name,
+        uri=controller_uri,
+        namespace='/'
+    )
+
+    for key, value in list(kv.items()):
+        if key.startswith('xcp/volume/'):
+            size = key.rindex('/')
+            kv.namespace = key[:size]
+            del kv[key[size + 1:]]
+
+
 def main():
     parser = argparse.ArgumentParser()
     parser.add_argument('-u', '--uri', required=True)
     parser.add_argument('-g', '--group-name', required=True)
     parser.add_argument('-n', '--namespace', default='/')
+
+    action = parser.add_mutually_exclusive_group(required=True)
+    action.add_argument('--dump-volumes', action='store_true')
+    action.add_argument('--remove-volume', metavar='VDI_UUID')
+    action.add_argument('--remove-all-volumes', action='store_true')
+
     args = parser.parse_args()
-    dump_kv(args.uri, args.group_name, args.namespace)
+    if args.dump_volumes:
+        dump_kv(args.uri, args.group_name, args.namespace)
+    elif args.remove_volume:
+        remove_volume(args.uri, args.group_name, args.remove_volume)
+    elif args.remove_all_volumes:
+        remove_all_volumes(args.uri, args.group_name)
+
 
 if __name__ == '__main__':
     main()
-- 
2.45.2


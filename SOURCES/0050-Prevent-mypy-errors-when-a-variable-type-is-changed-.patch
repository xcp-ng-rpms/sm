From c314b5ecfec796c2329f35d1ed3e913b360c21a1 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Wed, 16 Oct 2024 14:58:18 +0200
Subject: [PATCH 50/61] Prevent mypy errors when a variable type is changed in
 `BaseISCSISR`

Log without this change on `chappasword` and `incoming_chappassword`:
```
error: Incompatible types in assignment (expression has type "bytes", variable has type "str")  [assignment]
```

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/BaseISCSI.py | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/BaseISCSI.py b/drivers/BaseISCSI.py
index 798491d0..a9d06743 100755
--- a/drivers/BaseISCSI.py
+++ b/drivers/BaseISCSI.py
@@ -175,11 +175,11 @@ class BaseISCSISR(SR.SR):
                 and ('chappassword' in self.dconf or 'chappassword_secret' in self.dconf):
             self.chapuser = self.dconf['chapuser'].encode('utf-8')
             if 'chappassword_secret' in self.dconf:
-                self.chappassword = util.get_secret(self.session, self.dconf['chappassword_secret'])
+                chappassword = util.get_secret(self.session, self.dconf['chappassword_secret'])
             else:
-                self.chappassword = self.dconf['chappassword']
+                chappassword = self.dconf['chappassword']
 
-            self.chappassword = self.chappassword.encode('utf-8')
+            self.chappassword = chappassword.encode('utf-8')
 
         self.incoming_chapuser = ""
         self.incoming_chappassword = ""
@@ -187,11 +187,11 @@ class BaseISCSISR(SR.SR):
                 and ('incoming_chappassword' in self.dconf or 'incoming_chappassword_secret' in self.dconf):
             self.incoming_chapuser = self.dconf['incoming_chapuser'].encode('utf-8')
             if 'incoming_chappassword_secret' in self.dconf:
-                self.incoming_chappassword = util.get_secret(self.session, self.dconf['incoming_chappassword_secret'])
+                incoming_chappassword = util.get_secret(self.session, self.dconf['incoming_chappassword_secret'])
             else:
-                self.incoming_chappassword = self.dconf['incoming_chappassword']
+                incoming_chappassword = self.dconf['incoming_chappassword']
 
-            self.incoming_chappassword = self.incoming_chappassword.encode('utf-8')
+            self.incoming_chappassword = incoming_chappassword.encode('utf-8')
 
         self.port = DEFAULT_PORT
         if 'port' in self.dconf and self.dconf['port']:

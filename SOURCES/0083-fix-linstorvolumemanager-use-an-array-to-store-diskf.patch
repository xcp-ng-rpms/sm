From 03c55a736769042775bd8da2ebc71377c04050a6 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Wed, 5 Oct 2022 10:45:50 +0200
Subject: [PATCH 083/176] fix(linstorvolumemanager): use an array to store
 diskful volumes info

Otherwise the `is_diskful` attr only reflects the info of one host
after a call to `get_volume_info`... And we therefore lose this
information concerning the others.

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/LinstorSR.py            | 4 +++-
 drivers/linstorvolumemanager.py | 9 +++++----
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/LinstorSR.py b/drivers/LinstorSR.py
index ae25385..b855807 100755
--- a/drivers/LinstorSR.py
+++ b/drivers/LinstorSR.py
@@ -39,6 +39,7 @@ import os
 import re
 import scsiutil
 import signal
+import socket
 import SR
 import SRCommand
 import subprocess
@@ -2729,7 +2730,8 @@ class LinstorVDI(VDI.VDI):
                     .format(self.uuid, e)
                 )
 
-            must_get_device_path = volume_info.is_diskful
+            hostname = socket.gethostname()
+            must_get_device_path = hostname in volume_info.diskful
 
         drbd_path = None
         if must_get_device_path or self.sr._is_master:
diff --git a/drivers/linstorvolumemanager.py b/drivers/linstorvolumemanager.py
index efe5d53..e577f63 100755
--- a/drivers/linstorvolumemanager.py
+++ b/drivers/linstorvolumemanager.py
@@ -307,19 +307,19 @@ class LinstorVolumeManager(object):
             'allocated_size',  # Allocated size, place count is not used.
             'virtual_size',    # Total virtual available size of this volume
                                # (i.e. the user size at creation).
-            'is_diskful'
+            'diskful'          # Array of nodes that have a diskful volume.
         )
 
         def __init__(self, name):
             self.name = name
             self.allocated_size = 0
             self.virtual_size = 0
-            self.is_diskful = False
+            self.diskful = []
 
         def __repr__(self):
             return 'VolumeInfo("{}", {}, {}, {})'.format(
                 self.name, self.allocated_size, self.virtual_size,
-                'diskful' if self.is_diskful else 'diskless'
+                self.diskful
             )
 
     # --------------------------------------------------------------------------
@@ -1878,7 +1878,8 @@ class LinstorVolumeManager(object):
             else:
                 current = all_volume_info[resource.name]
 
-            current.is_diskful = linstor.consts.FLAG_DISKLESS not in resource.flags
+            if linstor.consts.FLAG_DISKLESS not in resource.flags:
+                current.diskful.append(resource.node_name)
 
             for volume in resource.volumes:
                 # We ignore diskless pools of the form "DfltDisklessStorPool".
-- 
2.45.2


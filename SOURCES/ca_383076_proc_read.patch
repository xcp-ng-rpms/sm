Private/timsmi/ca 383076 proc read (#660)

From: Tim Smith <41006009+TimSmithCtx@users.noreply.github.com>

* CA-383076 Before returning open files from /proc ensure PIDs are alive

A scan over /proc takes some time to complete, and there is no
particular guarantee of the relative timing of when a process exits and
when its /proc entries have gone away. Thus, before returning a list of
PIDs which claim to have a file open, verify the PIDs in question are
actually alive with a kill(0) test.

Signed-off-by: Tim Smith <tim.smith@cloud.com>

* Move mocks dir

Move the tests/mocks dir outside the tests directory to avoid spurious
complaints about test coverage

Signed-off-by: Tim Smith <tim.smith@cloud.com>

---------

Signed-off-by: Tim Smith <tim.smith@cloud.com>
Co-authored-by: Tim Smith <tim.smith@cloud.com>

diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml
index d8e3941..49d2334 100644
--- a/.github/workflows/main.yml
+++ b/.github/workflows/main.yml
@@ -21,5 +21,5 @@ jobs:
       - name: Test
         run: |
           make precheck
-          PYTHONPATH="./tests/mocks:./drivers/" coverage3 run --branch --source='./drivers,./tests' -m unittest discover -s tests -p "*.py" -v
+          PYTHONPATH="./mocks:./drivers/" coverage3 run --branch --source='./drivers,./tests' -m unittest discover -s tests -p "*.py" -v
           coverage3 report --include='./*'
diff --git a/drivers/util.py b/drivers/util.py
index 29d9144..d90cebc 100755
--- a/drivers/util.py
+++ b/drivers/util.py
@@ -1407,6 +1407,23 @@ def extractSRFromDevMapper(path):
         return ''
 
 
+def pid_is_alive(pid):
+    """
+    Try to kill PID with signal 0.
+    If we succeed, the PID is alive, so return True.
+    If we get an EPERM error, the PID is alive but we are not allowed to
+    signal it. Still return true.
+    Any other error (e.g. ESRCH), return False
+    """
+    try:
+        os.kill(pid, 0)
+        return True
+    except OSError as e:
+        if e.errno == errno.EPERM:
+            return True
+        return False
+
+
 # Looks at /proc and figures either
 #   If a process is still running (default), returns open file names
 #   If any running process has open handles to the given file (process = False)
@@ -1463,13 +1480,21 @@ def findRunningProcessOrOpenFile(name, process=True):
                 else:
                     # need to return process name and pid tuples
                     if link == name:
-                        SMlog("File %s has an open handle with process %s "
-                              "with pid %s" % (name, prog, pid))
                         processandpids.append((prog, pid))
 
             # Get the connected sockets
             if name == prog:
                 sockets.update(get_connected_sockets(pid))
+
+        # We will only have a non-empty processandpids if some fd entries were found.
+        # Before returning them, verify that all the PIDs in question are properly alive.
+        # There is no specific guarantee of when a PID's /proc directory will disappear
+        # when it exits, particularly relative to filedescriptor cleanup, so we want to
+        # make sure we're not reporting a false positive.
+        processandpids = [ x for x in processandpids if pid_is_alive(x[1]) ]
+        for pp in processandpids:
+            SMlog(f"File {name} has an open handle with process {pp[0]} with pid {pp[1]}")
+
     except Exception as e:
         SMlog("Exception checking running process or open file handles. " \
                    "Error: %s" % str(e))
diff --git a/tests/mocks/XenAPI/__init__.py b/mocks/XenAPI/__init__.py
similarity index 100%
rename from tests/mocks/XenAPI/__init__.py
rename to mocks/XenAPI/__init__.py
diff --git a/tests/run_python_unittests.sh b/tests/run_python_unittests.sh
index 7d57f4d..071c4c2 100755
--- a/tests/run_python_unittests.sh
+++ b/tests/run_python_unittests.sh
@@ -20,7 +20,7 @@ fi
 
 (
     cd "$SMROOT"
-    PYTHONPATH="$SMROOT/tests/mocks:$SMROOT/drivers/" \
+    PYTHONPATH="$SMROOT/mocks:$SMROOT/drivers/" \
         $COVERAGE run --branch \
             --source="$SMROOT/drivers,$SMROOT/tests" \
             -m unittest discover -f -s "$TESTS" -p "$FILES" -v

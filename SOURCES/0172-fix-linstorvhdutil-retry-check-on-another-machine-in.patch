From 5a48b3ddc8683c3f6217c1bcce17d4f064efaee9 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Mon, 6 May 2024 18:15:00 +0200
Subject: [PATCH 172/180] fix(linstorvhdutil): retry check on another machine
 in case of failure (#54)

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/linstor-manager   |  5 +++--
 drivers/linstorvhdutil.py | 19 +++++++++++++++++--
 2 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/drivers/linstor-manager b/drivers/linstor-manager
index 94aa4fb9..47cbd2b7 100755
--- a/drivers/linstor-manager
+++ b/drivers/linstor-manager
@@ -29,7 +29,7 @@ import XenAPIPlugin
 
 from json import JSONEncoder
 from linstorjournaler import LinstorJournaler
-from linstorvhdutil import LinstorVhdUtil
+from linstorvhdutil import LinstorVhdUtil, check_ex
 from linstorvolumemanager import get_controller_uri, get_local_volume_openers, LinstorVolumeManager
 from lock import Lock
 import json
@@ -390,7 +390,8 @@ def check(session, args):
             args['ignoreMissingFooter']
         )
         fast = distutils.util.strtobool(args['fast'])
-        return str(vhdutil.check(device_path, ignore_missing_footer, fast))
+        check_ex(device_path, ignore_missing_footer, fast)
+        return str(True)
     except Exception as e:
         util.SMlog('linstor-manager:check error: {}'.format(e))
         raise
diff --git a/drivers/linstorvhdutil.py b/drivers/linstorvhdutil.py
index 17b7790e..fd2bc8be 100644
--- a/drivers/linstorvhdutil.py
+++ b/drivers/linstorvhdutil.py
@@ -50,6 +50,16 @@ def call_remote_method(session, host_ref, method, device_path, args):
     return response
 
 
+def check_ex(path, ignoreMissingFooter = False, fast = False):
+    cmd = [vhdutil.VHD_UTIL, "check", vhdutil.OPT_LOG_ERR, "-n", path]
+    if ignoreMissingFooter:
+        cmd.append("-i")
+    if fast:
+        cmd.append("-B")
+
+    vhdutil.ioretry(cmd)
+
+
 class LinstorCallException(util.SMException):
     def __init__(self, cmd_err):
         self.cmd_err = cmd_err
@@ -188,9 +198,14 @@ class LinstorVhdUtil:
             'ignoreMissingFooter': ignore_missing_footer,
             'fast': fast
         }
-        return self._check(vdi_uuid, **kwargs)  # pylint: disable = E1123
+        try:
+            self._check(vdi_uuid, **kwargs)  # pylint: disable = E1123
+            return True
+        except Exception as e:
+            util.SMlog('Call to `check` failed: {}'.format(e))
+            return False
 
-    @linstorhostcall(vhdutil.check, 'check')
+    @linstorhostcall(check_ex, 'check')
     def _check(self, vdi_uuid, response):
         return distutils.util.strtobool(response)
 

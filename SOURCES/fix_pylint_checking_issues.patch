Fix pylint checking issues

From: Lin Liu <lin.liu@citrix.com>

Signed-off-by: Lin Liu <lin.liu@citrix.com>

diff --git a/drivers/LVHDSR.py b/drivers/LVHDSR.py
index ec10fe7..de1dbb3 100755
--- a/drivers/LVHDSR.py
+++ b/drivers/LVHDSR.py
@@ -652,9 +652,9 @@ class LVHDSR(SR.SR):
         super(LVHDSR, self).forget_vdi(uuid)
 
     def scan(self, uuid):
+        activated = True
         try:
             lvname = ''
-            activated = True
             util.SMlog("LVHDSR.scan for %s" % self.uuid)
             if not self.isMaster:
                 util.SMlog('sr_scan blocked for non-master')
diff --git a/drivers/LVHDoISCSISR.py b/drivers/LVHDoISCSISR.py
index d2b7e66..187ce43 100755
--- a/drivers/LVHDoISCSISR.py
+++ b/drivers/LVHDoISCSISR.py
@@ -449,6 +449,7 @@ class LVHDoISCSISR(LVHDSR.LVHDSR):
     def attach(self, sr_uuid):
         try:
             connected = False
+            stored_exception = None
             for i in self.iscsiSRs:
                 try:
                     i.attach(sr_uuid)
@@ -466,7 +467,8 @@ class LVHDoISCSISR(LVHDSR.LVHDSR):
                 i._attach_LUN_bySCSIid(self.SCSIid)
 
             # Check if at least one iscsi succeeded
-            if not connected:
+            if not connected and stored_exception:
+                # pylint: disable=raising-bad-type
                 raise stored_exception
 
             if 'multiSession' in self.dconf:
diff --git a/drivers/SMBSR.py b/drivers/SMBSR.py
index fccc6be..1f8ba3b 100755
--- a/drivers/SMBSR.py
+++ b/drivers/SMBSR.py
@@ -201,8 +201,8 @@ class SMBSR(FileSR.SharedFileSR):
         self.attached = True
 
     def probe(self):
+        err = "SMBMount"
         try:
-            err = "SMBMount"
             self.mount(PROBE_MOUNTPOINT)
             sr_list = filter(util.match_uuid, util.listdir(PROBE_MOUNTPOINT))
             err = "SMBUnMount"
diff --git a/drivers/VDI.py b/drivers/VDI.py
index fee2060..bc2ae5f 100755
--- a/drivers/VDI.py
+++ b/drivers/VDI.py
@@ -324,10 +324,10 @@ class VDI(object):
                 self._cbt_op(child_uuid, cbtutil.set_cbt_parent,
                              child_path, parent_uuid)
                 lock.acquire()
+                paused_for_coalesce = False
                 try:
                     # Coalesce contents of bitmap with child's bitmap
                     # Check if child bitmap is currently attached
-                    paused_for_coalesce = False
                     consistent = self._cbt_op(child_uuid,
                                               cbtutil.get_cbt_consistency,
                                               child_path)
diff --git a/drivers/blktap2.py b/drivers/blktap2.py
index 2950ce2..316a8b1 100755
--- a/drivers/blktap2.py
+++ b/drivers/blktap2.py
@@ -2174,7 +2174,7 @@ class __BlktapControl(ClassDevice):
             self.name = name
 
         def __str__(self):
-            return "No such pool: %s", self.name
+            return "No such pool: {}".format(self.name)
 
     def get_pool(self, name):
         path = "%s/pools/%s" % (self.sysfs_path(), name)
diff --git a/drivers/lvutil.py b/drivers/lvutil.py
index 40bde90..e0fc0d7 100755
--- a/drivers/lvutil.py
+++ b/drivers/lvutil.py
@@ -427,8 +427,8 @@ def srlist_toxml(VGs, prefix, includeMetadata=False):
             # add SR name_label
             mdpath = os.path.join(VG_LOCATION, VG_PREFIX + val)
             mdpath = os.path.join(mdpath, MDVOLUME_NAME)
+            mgtVolActivated = False
             try:
-                mgtVolActivated = False
                 if not os.path.exists(mdpath):
                     # probe happens out of band with attach so this volume
                     # may not have been activated at this point
diff --git a/drivers/mpath_cli.py b/drivers/mpath_cli.py
index 58e04ee..26cfe03 100755
--- a/drivers/mpath_cli.py
+++ b/drivers/mpath_cli.py
@@ -25,7 +25,7 @@ class MPathCLIFail(Exception):
         return
 
     def __str__(self):
-        print("", "MPath CLI failed")
+        return "MPath CLI failed"
 
 mpathcmd = ["/usr/sbin/multipathd", "-k"]
 
diff --git a/drivers/scsiutil.py b/drivers/scsiutil.py
index 9a240b6..b2ff0f9 100755
--- a/drivers/scsiutil.py
+++ b/drivers/scsiutil.py
@@ -361,6 +361,7 @@ def _genArrayIdentifier(dev):
     try:
         cmd = ["sg_inq", "--page=0xc8", "-r", dev]
         id = util.pread2(cmd)
+        #pylint: disable=no-member
         return id.encode("hex")[180:212]
     except:
         return ""
diff --git a/drivers/srmetadata.py b/drivers/srmetadata.py
index 6137d2d..186bd11 100755
--- a/drivers/srmetadata.py
+++ b/drivers/srmetadata.py
@@ -650,8 +650,8 @@ class LVMMetadataHandler(MetadataHandler):
         MetadataHandler.__init__(self, path, write)
 
     def spaceAvailableForVdis(self, count):
+        created = False
         try:
-            created = False
             try:
                 # The easiest way to do this, is to create a dummy vdi and write it
                 uuid = util.gen_uuid()
diff --git a/drivers/util.py b/drivers/util.py
index e116424..1e13f79 100755
--- a/drivers/util.py
+++ b/drivers/util.py
@@ -1236,6 +1236,7 @@ def daemon():
 
 if __debug__:
     try:
+        #pylint: disable=used-before-assignment
         XE_IOFI_IORETRY
     except NameError:
         XE_IOFI_IORETRY = os.environ.get('XE_IOFI_IORETRY', None)
diff --git a/scripts/check-device-sharing b/scripts/check-device-sharing
index db1049f..c402ad1 100755
--- a/scripts/check-device-sharing
+++ b/scripts/check-device-sharing
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python3
 #
 # Copyright (C) Citrix Systems Inc.
 #
diff --git a/scripts/xe-getarrayidentifier b/scripts/xe-getarrayidentifier
index 8d7ead9..bef1843 100755
--- a/scripts/xe-getarrayidentifier
+++ b/scripts/xe-getarrayidentifier
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python3
 
 import sys
 import os
diff --git a/scripts/xe-getlunidentifier b/scripts/xe-getlunidentifier
index 1b870e3..d50891e 100755
--- a/scripts/xe-getlunidentifier
+++ b/scripts/xe-getlunidentifier
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python3
 
 import sys
 import os

From 388927905668b5f4b577b2099ea95fcae1f62c57 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Thu, 26 Aug 2021 16:52:01 +0200
Subject: [PATCH 044/178] fix(LinstorSR): prevent starting controller during
 fail in linstor manager destroy method

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/linstorvolumemanager.py | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/drivers/linstorvolumemanager.py b/drivers/linstorvolumemanager.py
index 0357b92..e9b7c2f 100755
--- a/drivers/linstorvolumemanager.py
+++ b/drivers/linstorvolumemanager.py
@@ -1263,9 +1263,11 @@ class LinstorVolumeManager(object):
                 'It exists remaining volumes'
             )
 
+        controller_is_running = self._controller_is_running()
         uri = 'linstor://localhost'
         try:
-            self._start_controller(start=False)
+            if controller_is_running:
+                self._start_controller(start=False)
 
             # 1. Umount LINSTOR database.
             self._mount_database_volume(
@@ -1290,7 +1292,7 @@ class LinstorVolumeManager(object):
                     self._linstor, pool.name, pool.node_name
                 )
         except Exception as e:
-            self._start_controller(start=True)
+            self._start_controller(start=controller_is_running)
             raise e
 
         try:
@@ -2503,6 +2505,10 @@ class LinstorVolumeManager(object):
                     return True
         return False
 
+    @classmethod
+    def _controller_is_running(cls):
+        return cls._service_is_running('linstor-controller')
+
     @classmethod
     def _start_controller(cls, start=True):
         return cls._start_service('linstor-controller', start)
@@ -2519,6 +2525,13 @@ class LinstorVolumeManager(object):
                 .format(action, name, out, err)
             )
 
+    @staticmethod
+    def _service_is_running(name):
+        (ret, out, err) = util.doexec([
+            'systemctl', 'is-active', '--quiet', name
+        ])
+        return not ret
+
     @staticmethod
     def _is_mounted(mountpoint):
         (ret, out, err) = util.doexec(['mountpoint', '-q', mountpoint])
-- 
2.46.0


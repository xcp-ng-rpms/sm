From 5adf5942c36f6f8f144658bc72fb4c9d1b643bce Mon Sep 17 00:00:00 2001
From: Mark Syms <mark.syms@cloud.com>
Date: Mon, 6 Jan 2025 10:26:02 +0000
Subject: [PATCH 67/69] CP-35551: tapdisk-pause check for nbd socket path

Signed-off-by: Mark Syms <mark.syms@cloud.com>
---
 drivers/tapdisk-pause | 33 ++++++++++++---------------------
 1 file changed, 12 insertions(+), 21 deletions(-)

diff --git a/drivers/tapdisk-pause b/drivers/tapdisk-pause
index f98257a2..99d63b00 100755
--- a/drivers/tapdisk-pause
+++ b/drivers/tapdisk-pause
@@ -2,13 +2,13 @@
 #
 # Copyright (C) Citrix Systems Inc.
 #
-# This program is free software; you can redistribute it and/or modify 
-# it under the terms of the GNU Lesser General Public License as published 
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published
 # by the Free Software Foundation; version 2.1 only.
 #
-# This program is distributed in the hope that it will be useful, 
-# but WITHOUT ANY WARRANTY; without even the implied warranty of 
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 # GNU Lesser General Public License for more details.
 #
 # You should have received a copy of the GNU Lesser General Public License
@@ -37,6 +37,7 @@ except ImportError:
     LINSTOR_AVAILABLE = False
 
 TAPDEV_BACKPATH_PFX = "/dev/sm/backend"
+NBD_BACKPATH_PFX = "/run/blktap-control/nbd/"
 TAPDEV_PHYPATH_PFX = "/dev/sm/phy"
 
 def locking(excType, override=True):
@@ -70,10 +71,6 @@ def locking(excType, override=True):
         return wrapper
     return locking2
 
-def _getDevMajor_minor(dev):
-    st = os.stat(dev)
-    return [os.major(st.st_rdev),os.minor(st.st_rdev)]
-
 def _mkphylink(sr_uuid, vdi_uuid, path):
     sympath = "/dev/sm/phy/%s/%s" % (sr_uuid,vdi_uuid)
     cmd = ['ln', '-sf', path, sympath]
@@ -87,13 +84,13 @@ def tapPause(session, args):
 def tapUnpause(session, args):
     tap = Tapdisk(session, args)
     return tap.Unpause()
-    
+
 def tapRefresh(session, args):
     tap = Tapdisk(session, args)
     if tap.Pause() != "True":
         return str(False)
     return tap.Unpause()
-    
+
 
 class Tapdisk:
     def __init__(self, session, args):
@@ -105,7 +102,7 @@ class Tapdisk:
         else:
             self.failfast = False
         self.session = session
-        self.path = os.path.join(TAPDEV_BACKPATH_PFX,self.sr_uuid,self.vdi_uuid)
+        self.path = os.path.join(NBD_BACKPATH_PFX,self.sr_uuid,self.vdi_uuid)
         self.phypath = os.path.join(TAPDEV_PHYPATH_PFX,self.sr_uuid,self.vdi_uuid)
         self.lock = Lock("vdi", self.vdi_uuid)
         self.realpath = None
@@ -123,7 +120,7 @@ class Tapdisk:
             realpath = os.readlink(self.phypath)
         except OSError as e:
             util.SMlog("Phypath %s does not exist" % self.phypath)
-            return            
+            return
         util.SMlog("Realpath: %s" % realpath)
         if realpath.startswith("/dev/VG_XenStorage-") and \
                 not os.path.exists(realpath):
@@ -185,10 +182,7 @@ class Tapdisk:
         if not os.path.exists(self.path):
             util.SMlog("No %s: nothing to pause" % self.path)
             return str(True)
-        self.major, self.minor = _getDevMajor_minor(self.path)
-        if self.major != blktap2.Tapdisk.major():
-            util.SMlog("Non-tap major number: %d" % self.major)
-            return str(False)
+        self.minor = blktap2.VDI.NBDLink(self.path).read_minor_from_path()
         tapargs = {"minor":self.minor}
         util.SMlog("Calling tap pause with minor %d" % self.minor)
         tapdisk = blktap2.Tapdisk.get(**tapargs)
@@ -202,10 +196,7 @@ class Tapdisk:
             util.SMlog("No %s: nothing to unpause" % self.path)
             return str(True)
         self._pathRefresh()
-        self.major, self.minor = _getDevMajor_minor(self.path)    
-        if self.major != blktap2.Tapdisk.major():
-            util.SMlog("Non-tap major number: %d" % self.major)
-            return str(False)
+        self.minor = blktap2.VDI.NBDLink(self.path).read_minor_from_path()
         if self.activate_parents:
             util.SMlog("Activating parents of %s" % self.vdi_uuid)
             vg_name = lvhdutil.VG_PREFIX + self.sr_uuid

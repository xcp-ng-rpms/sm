From 921f3857ed55cdbfc5920036f46e580ceb8fcd18 Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.tech>
Date: Thu, 28 Aug 2025 17:45:07 +0200
Subject: [PATCH] Fix tests of "CP-51843: add unit tests for setup_cache"

Upstream patch of ae103499e1db091e232051c7e4200ca7b39ce64c is incorrect.

All "@mock.patch('blktap2.VDI.PhyLink', autospec=True)" lines must be removed
because PhyLink is mocked globally.

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.tech>
---
 tests/test_blktap2.py | 28 +++++++---------------------
 1 file changed, 7 insertions(+), 21 deletions(-)

diff --git a/tests/test_blktap2.py b/tests/test_blktap2.py
index 4318a6ac..4e55b527 100644
--- a/tests/test_blktap2.py
+++ b/tests/test_blktap2.py
@@ -227,13 +227,11 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate(self, mock_tapdisk, mock_nbd_link, mock_backend,
-                      mock_phy, mock_attach,
-                      mock_this_host, mock_sleep):
+                      mock_attach, mock_this_host, mock_sleep):
         """
         Test blktap2.VDI.activate, no cache, RW, success
         """
@@ -256,14 +254,12 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate_relink_retry(
             self, mock_tapdisk, mock_nbd_link, mock_backend,
-            mock_phy, mock_attach,
-            mock_this_host, mock_sleep):
+            mock_attach, mock_this_host, mock_sleep):
         """
         Test blktap2.VDI.activate, relinking, retry 1, success
         """
@@ -284,14 +280,12 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate_pause_retry(
             self, mock_tapdisk, mock_nbd_link, mock_backend,
-            mock_phy, mock_attach,
-            mock_this_host, mock_sleep):
+            mock_attach, mock_this_host, mock_sleep):
         """
         Test blktap2.VDI.activate, paused, retry 1, success
         """
@@ -311,14 +305,12 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate_paused_while_tagging(
             self, mock_tapdisk, mock_nbd_link, mock_backend,
-            mock_phy, mock_attach,
-            mock_this_host, mock_sleep):
+            mock_attach, mock_this_host, mock_sleep):
         """
         Test blktap2.VDI.activate, paused, while tagging, success
         """
@@ -344,14 +336,12 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate_relink_while_tagging(
             self, mock_tapdisk, mock_nbd_link, mock_backend,
-            mock_phy, mock_attach,
-            mock_this_host, mock_sleep):
+            mock_attach, mock_this_host, mock_sleep):
         """
         Test blktap2.VDI.activate, relinking, while tagging, retry 1, success
         """
@@ -377,14 +367,12 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate_ro_already_activating_retry(
             self, mock_tapdisk, mock_nbd_link, mock_backend,
-            mock_phy, mock_attach,
-            mock_this_host, mock_sleep):
+            mock_attach, mock_this_host, mock_sleep):
         """
         If we're activating for read-only access, with someone else (let's
         say, another host in the pool) also being in the process of
@@ -415,14 +403,12 @@ class TestVDI(unittest.TestCase):
     @mock.patch('blktap2.time.sleep', autospec=True)
     @mock.patch('blktap2.util.get_this_host', autospec=True)
     @mock.patch('blktap2.VDI._attach', autospec=True)
-    @mock.patch('blktap2.VDI.PhyLink', autospec=True)
     @mock.patch('blktap2.VDI.BackendLink', autospec=True)
     @mock.patch('blktap2.VDI.NBDLink', autospec=True)
     @mock.patch('blktap2.Tapdisk')
     def test_activate_rw_already_activating_fail(
             self, mock_tapdisk, mock_nbd_link, mock_backend,
-            mock_phy, mock_attach,
-            mock_this_host, mock_sleep):
+            mock_attach, mock_this_host, mock_sleep):
         """
         If we're activating for read-write access, with someone else (let's
         say, another host in the pool) also being in the process of

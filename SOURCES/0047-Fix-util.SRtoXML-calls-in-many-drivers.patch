From c4cd2b0a8f8338339dc8012fddf3becc4441a2ce Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.fr>
Date: Wed, 16 Oct 2024 14:44:19 +0200
Subject: [PATCH] Fix util.SRtoXML calls in many drivers

Without this change, mypy triggers an error `var-annoted`:
`Need type annotation for "sr_dict"`

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/CephFSSR.py    | 3 +--
 drivers/GlusterFSSR.py | 3 +--
 drivers/MooseFSSR.py   | 3 +--
 drivers/SMBSR.py       | 5 +----
 4 files changed, 4 insertions(+), 10 deletions(-)

Index: sm-3.2.12/drivers/CephFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/CephFSSR.py
+++ sm-3.2.12/drivers/CephFSSR.py
@@ -197,8 +197,7 @@ class CephFSSR(FileSR.FileSR):
         except (util.CommandException, xs_errors.XenError):
             raise
         # Create a dictionary from the SR uuids to feed SRtoXML()
-        sr_dict = {sr_uuid: {} for sr_uuid in sr_list}
-        return util.SRtoXML(sr_dict)
+        return util.SRtoXML({sr_uuid: {} for sr_uuid in sr_list})
 
     def detach(self, sr_uuid):
         if not self.checkmount():
Index: sm-3.2.12/drivers/GlusterFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/GlusterFSSR.py
+++ sm-3.2.12/drivers/GlusterFSSR.py
@@ -177,8 +177,7 @@ class GlusterFSSR(FileSR.FileSR):
         except (util.CommandException, xs_errors.XenError):
             raise
         # Create a dictionary from the SR uuids to feed SRtoXML()
-        sr_dict = {sr_uuid: {} for sr_uuid in sr_list}
-        return util.SRtoXML(sr_dict)
+        return util.SRtoXML({sr_uuid: {} for sr_uuid in sr_list})
 
     def detach(self, sr_uuid):
         if not self.checkmount():
Index: sm-3.2.12/drivers/MooseFSSR.py
===================================================================
--- sm-3.2.12.orig/drivers/MooseFSSR.py
+++ sm-3.2.12/drivers/MooseFSSR.py
@@ -195,8 +195,7 @@ class MooseFSSR(FileSR.FileSR):
         except (util.CommandException, xs_errors.XenError):
             raise
         # Create a dictionary from the SR uuids to feed SRtoXML()
-        sr_dict = {sr_uuid: {} for sr_uuid in sr_list}
-        return util.SRtoXML(sr_dict)
+        return util.SRtoXML({sr_uuid: {} for sr_uuid in sr_list})
 
     def detach(self, sr_uuid):
         if not self.checkmount():
Index: sm-3.2.12/drivers/SMBSR.py
===================================================================
--- sm-3.2.12.orig/drivers/SMBSR.py
+++ sm-3.2.12/drivers/SMBSR.py
@@ -220,11 +220,8 @@ class SMBSR(FileSR.SharedFileSR):
             raise xs_errors.XenError(err, opterr=inst.errstr)
         except (util.CommandException, xs_errors.XenError):
             raise
-
         # Create a dictionary from the SR uuids to feed SRtoXML()
-        sr_dict = {sr_uuid: {} for sr_uuid in sr_list}
-
-        return util.SRtoXML(sr_dict)
+        return util.SRtoXML({sr_uuid: {} for sr_uuid in sr_list})
 
     def detach(self, sr_uuid):
         """Detach the SR: Unmounts and removes the mountpoint"""

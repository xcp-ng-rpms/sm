From 705a6d9deed2ba862577681fc54df144060f3816 Mon Sep 17 00:00:00 2001
From: Mark Syms <mark.syms@citrix.com>
Date: Thu, 20 May 2021 17:40:06 +0100
Subject: [PATCH 01/23] backport of ccd121cc248d79b749a63d4ad099e6d5f4b8b588:
 CA-354692: check for device parameter in create/probe calls

Signed-off-by: Mark Syms <mark.syms@citrix.com>
Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.fr>
---
 drivers/EXTSR.py  | 3 +++
 drivers/LVHDSR.py | 4 +++-
 drivers/SR.py     | 9 +++++++++
 3 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/EXTSR.py b/drivers/EXTSR.py
index 4caa09df..da43082e 100755
--- a/drivers/EXTSR.py
+++ b/drivers/EXTSR.py
@@ -18,6 +18,7 @@
 # EXTSR: Based on local-file storage repository, mounts ext3 partition
 
 import SR, SRCommand, FileSR, util, lvutil, scsiutil
+from SR import deviceCheck
 
 import os
 import xs_errors
@@ -141,10 +142,12 @@ class EXTSR(FileSR.FileSR):
             raise xs_errors.XenError('LVMUnMount', \
                   opterr='lvm -an failed errno is %d' % inst.code)
 
+    @deviceCheck
     def probe(self):
         return lvutil.srlist_toxml(lvutil.scan_srlist(EXT_PREFIX, self.dconf['device']),
                 EXT_PREFIX)
 
+    @deviceCheck
     def create(self, sr_uuid, size):
         if self._checkmount():
             raise xs_errors.XenError('SRExists')
diff --git a/drivers/LVHDSR.py b/drivers/LVHDSR.py
index cfee0717..dd8e20b9 100755
--- a/drivers/LVHDSR.py
+++ b/drivers/LVHDSR.py
@@ -19,6 +19,7 @@
 #
 
 import SR
+from SR import deviceCheck
 import VDI
 import SRCommand
 import util
@@ -494,7 +495,7 @@ class LVHDSR(SR.SR):
                 util.logException("LVHDSR._expand_size for %s failed to resize"
                                   " the PV" % self.uuid)
 
-
+    @deviceCheck
     def create(self, uuid, size):
         util.SMlog("LVHDSR.create for %s" % self.uuid)
         if not self.isMaster:
@@ -849,6 +850,7 @@ class LVHDSR(SR.SR):
         self.physical_utilisation = stats['physical_utilisation']
         self._db_update()
 
+    @deviceCheck
     def probe(self):
         return lvutil.srlist_toxml(
                 lvutil.scan_srlist(lvhdutil.VG_PREFIX, self.dconf['device']),
diff --git a/drivers/SR.py b/drivers/SR.py
index aa5a6b1e..c7528638 100755
--- a/drivers/SR.py
+++ b/drivers/SR.py
@@ -49,6 +49,15 @@ class SROSError(SRException):
         self.errno = errno
         Exception.__init__(self, reason)
 
+
+def deviceCheck(op):
+    def wrapper(self, *args):
+        if 'device' not in self.dconf:
+            raise xs_errors.XenError('ConfigDeviceMissing')
+        return op(self, *args)
+    return wrapper
+
+
 backends = []
 def registerSR(SRClass):
     """Register SR with handler. All SR subclasses should call this in 

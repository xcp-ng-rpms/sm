From 0d47a4186c361bbc619f8a7042024e6fd2a0d51c Mon Sep 17 00:00:00 2001
From: Ronan Abhamon <ronan.abhamon@vates.tech>
Date: Tue, 22 Apr 2025 11:27:12 +0200
Subject: [PATCH] Fix warns reported by new github workflow

Signed-off-by: Ronan Abhamon <ronan.abhamon@vates.tech>
---
 drivers/LUNperVDI.py  | 1 +
 drivers/LVHDSR.py     | 5 +++--
 drivers/LinstorSR.py  | 3 +--
 drivers/cleanup.py    | 3 +++
 drivers/iscsilib.py   | 2 +-
 drivers/mpathcount.py | 4 ++--
 drivers/resetvdis.py  | 2 +-
 7 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/drivers/LUNperVDI.py b/drivers/LUNperVDI.py
index e3583a5..070c671 100755
--- a/drivers/LUNperVDI.py
+++ b/drivers/LUNperVDI.py
@@ -87,6 +87,7 @@ class RAWVDI(VDI.VDI):
         VDIs = util._getVDIs(self.sr)
         self.sr._loadvdis()
         smallest = 0
+        v = {}
         for vdi in VDIs:
             if not vdi['managed'] \
                    and int(vdi['virtual_size']) >= int(size) \
diff --git a/drivers/LVHDSR.py b/drivers/LVHDSR.py
index 852cad3..52d257d 100755
--- a/drivers/LVHDSR.py
+++ b/drivers/LVHDSR.py
@@ -222,6 +222,7 @@ class LVHDSR(SR.SR):
         for key in self.lvmCache.lvs.keys():
             # if the lvname has a uuid in it
             type = None
+            vdi = None
             if contains_uuid_regex.search(key) is not None:
                 if key.startswith(lvhdutil.LV_PREFIX[vhdutil.VDI_TYPE_VHD]):
                     type = vhdutil.VDI_TYPE_VHD
@@ -997,8 +998,8 @@ class LVHDSR(SR.SR):
             self.lvActivator.activate(baseUuid, base.name, False)
             origRefcountNormal = 1
             vhdInfo = vhdutil.getVHDInfo(basePath, lvhdutil.extractUuid, False)
-        if base.vdiType == vhdutil.VDI_TYPE_VHD and vhdInfo.hidden:
-            vhdutil.setHidden(basePath, False)
+            if vhdInfo.hidden:
+                vhdutil.setHidden(basePath, False)
         elif base.vdiType == vhdutil.VDI_TYPE_RAW and base.hidden:
             self.lvmCache.setHidden(base.name, False)
 
diff --git a/drivers/LinstorSR.py b/drivers/LinstorSR.py
index c2579a5..2ecb0e3 100755
--- a/drivers/LinstorSR.py
+++ b/drivers/LinstorSR.py
@@ -1205,8 +1205,7 @@ class LinstorSR(SR.SR):
             if USE_KEY_HASH and vdi.vdi_type == vhdutil.VDI_TYPE_VHD:
                 # TODO: Replace pylint comment with this feature when possible:
                 # https://github.com/PyCQA/pylint/pull/2926
-                vdi.sm_config_override['key_hash'] = \
-                    self._vhdutil.get_key_hash(vdi_uuid)  # pylint: disable = E1120
+                vdi.sm_config_override['key_hash'] = self._vhdutil.get_key_hash(vdi_uuid)  # pylint: disable = E1120
 
             # 4.c. Update CBT status of disks either just added
             # or already in XAPI.
diff --git a/drivers/cleanup.py b/drivers/cleanup.py
index 7bba0a0..a50403c 100755
--- a/drivers/cleanup.py
+++ b/drivers/cleanup.py
@@ -1151,6 +1151,7 @@ class VDI(object):
 class FileVDI(VDI):
     """Object representing a VDI in a file-based SR (EXT or NFS)"""
 
+    @override
     @staticmethod
     def extractUuid(path):
         path = os.path.basename(path.strip())
@@ -1248,6 +1249,7 @@ class LVHDVDI(VDI):
         self.parentUuid = info.parentUuid
         self.path = os.path.join(self.sr.path, self.fileName)
 
+    @override
     @staticmethod
     def extractUuid(path):
         return lvhdutil.extractUuid(path)
@@ -4174,6 +4176,7 @@ def abort_optional_reenable(uuid):
 #
 def main():
     action = ""
+    maxAge = 0
     uuid = ""
     background = False
     force = False
diff --git a/drivers/iscsilib.py b/drivers/iscsilib.py
index e54de1b..27d34a5 100644
--- a/drivers/iscsilib.py
+++ b/drivers/iscsilib.py
@@ -248,7 +248,7 @@ def get_node_config (portal, targetIQN):
     ini_sec = "root"
     str_fp = io.StringIO("[%s]\n%s" % (ini_sec, stdout))
     parser = RawConfigParser()
-    parser.readfp(str_fp)
+    parser.read_file(str_fp)
     str_fp.close()
     return dict(parser.items(ini_sec))
 
diff --git a/drivers/mpathcount.py b/drivers/mpathcount.py
index 43285ed..93d5666 100755
--- a/drivers/mpathcount.py
+++ b/drivers/mpathcount.py
@@ -89,8 +89,8 @@ def match_pathup(s):
     match = re.match(r'.*\d+:\d+:\d+:\d+\s+\S+\s+\S+\s+\S+\s+(\S+)', s)
     if match:
         path_status = match.group(1)
-    if path_status in ['faulty', 'shaky', 'failed']:
-        return False
+        if path_status in ['faulty', 'shaky', 'failed']:
+            return False
     return True
 
 
diff --git a/drivers/resetvdis.py b/drivers/resetvdis.py
index 81938d4..61454f8 100755
--- a/drivers/resetvdis.py
+++ b/drivers/resetvdis.py
@@ -21,6 +21,7 @@
 import cleanup
 import util
 import lock
+import sys
 import XenAPI # pylint: disable=import-error
 
 
@@ -141,7 +142,6 @@ def usage():
     sys.exit(1)
 
 if __name__ == '__main__':
-    import sys
     import atexit
 
     if len(sys.argv) not in [3, 4, 5]:

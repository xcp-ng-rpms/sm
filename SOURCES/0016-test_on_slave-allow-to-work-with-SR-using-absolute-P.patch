From ccbeefe45eb6b9c452bdb0c786f4b68db579db67 Mon Sep 17 00:00:00 2001
From: Yann Dirson <yann.dirson@vates.fr>
Date: Wed, 8 Mar 2023 13:53:21 +0100
Subject: [PATCH] test_on_slave: allow to work with SR using absolute
 PROBE_MOUNTPOINT

PROBE_MOUNTPOINT in a some drivers is a relative path, which is resolved
using MOUNT_BASE at probe time, but CephFS, GlusterFS and MooseFS it is
set on driver load to an absolute path, and this requires MOUNT_BASE to be
looking like a path component.

```
drivers/CephFSSR.py:69: in <module>
    PROBE_MOUNTPOINT = os.path.join(SR.MOUNT_BASE, "probe")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

a = <MagicMock name='mock.MOUNT_BASE' id='140396863897728'>, p = ('probe',)

    def join(a, *p):
        """Join two or more pathname components, inserting '/' as needed.
        If any component is an absolute path, all previous path components
        will be discarded.  An empty last part will result in a path that
        ends with a separator."""
>       a = os.fspath(a)
E       TypeError: expected str, bytes or os.PathLike object, not MagicMock

/usr/lib64/python3.6/posixpath.py:80: TypeError
```

Note this same idiom is also used in upstream SMBFS, although that does not
appear to cause any problem with the tests.

Signed-off-by: Yann Dirson <yann.dirson@vates.fr>
---
 tests/test_on_slave.py | 1 +
 1 file changed, 1 insertion(+)

Index: sm-3.2.12/tests/test_on_slave.py
===================================================================
--- sm-3.2.12.orig/tests/test_on_slave.py
+++ sm-3.2.12/tests/test_on_slave.py
@@ -30,6 +30,7 @@ class Test_on_slave_is_open(unittest.Tes
         self.mock_import.side_effect = self.fake_import
 
         self.mock_sr = mock.MagicMock()
+        self.mock_sr.MOUNT_BASE = "/tmp/sr_mount"
         self.mocks['SR'] = self.mock_sr
         self.mock_blktap2 = mock.MagicMock()
         self.mocks['blktap2'] = self.mock_blktap2
